[versions]
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
kotlin = "2.2.0"
agp = "8.10.1"
ktor = "3.2.3"
ksp = "2.2.0-2.0.2"
kotlinpoet-ksp = "2.2.0"
maven-publish = "0.34.0"
compose-plugin = "1.8.2"
androidx-activity-compose = "1.10.1"
logback-classic = "1.5.18"

[libraries]
# Common
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }

# Kotlin Multiplatform
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-websockets = { group = "io.ktor", name = "ktor-client-websockets", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
symbol-processing-api = { group = "com.google.devtools.ksp", name = "symbol-processing-api", version.ref = "ksp" }
symbol-processing = { group = "com.google.devtools.ksp", name = "symbol-processing", version.ref = "ksp" }
kotlinpoet-ksp = { group = "com.squareup", name = "kotlinpoet-ksp", version.ref = "kotlinpoet-ksp" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidx-activity-compose" }

# Ktor Server
ktor-server-core = { group = "io.ktor", name = "ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-websockets = { group = "io.ktor", name = "ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-auth-jwt = { group = "io.ktor", name = "ktor-server-auth-jwt-jvm", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-config-yaml = { group = "io.ktor", name = "ktor-server-config-yaml-jvm", version.ref = "ktor" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback-classic" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

[bundles]
common-ksp-util = [
	'kotlin-reflect',
	'symbol-processing',
	'symbol-processing-api',
	'kotlinpoet-ksp'
]

multiplatform-core = [
	'ktor-client-core'
]

multiplatform-mock = [
	'ktor-client-core',
	'ktor-client-logging',
	'ktor-client-serialization'
]

multiplatform-ksp = [
	'kotlin-reflect',
	'symbol-processing',
	'symbol-processing-api',
	'kotlinpoet-ksp'
]

multiplatform-websockets = [
	'ktor-client-websockets'
]

multiplatform-sample = [
	'ktor-client-core',
	'ktor-client-logging',
	'ktor-client-cio',
	'ktor-client-websockets',
	'ktor-client-serialization',
	'ktor-client-content-negotiation',
	'ktor-serialization-kotlinx-json'
]

server-core = [
	'ktor-server-core'
]

server-ksp = [
	'kotlin-reflect',
	'symbol-processing',
	'symbol-processing-api',
	'kotlinpoet-ksp'
]

server-auth = [
	'ktor-server-auth'
]

server-sample = [
	'ktor-server-core',
	'ktor-server-auth',
	'ktor-server-auth-jwt',
	'ktor-server-websockets',
	'ktor-server-netty',
	'logback-classic',
	'ktor-server-config-yaml',
	'ktor-serialization-kotlinx-json',
]